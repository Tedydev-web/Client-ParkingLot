{"ast":null,"code":"import _List from \"antd/lib/list\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Mile_Travel } from \"../../consts\";\nimport { useTranslation } from \"react-i18next\";\nconst Navi_calculate = ({\n  result,\n  selectedUnit,\n  result_select,\n  // handleButtonClick,\n  selectedIcon,\n  openDeltails,\n  dispatch,\n  selectResultAction\n}) => {\n  const {\n    0: visibleButton,\n    1: setVisibleButton\n  } = useState(\"fastest\");\n  const {\n    t\n  } = useTranslation(\"common\");\n  const handleButtonClick = useCallback(type => {\n    setVisibleButton(type);\n  }, []);\n  const convertToHoursAndMinutes = seconds => {\n    let h = Math.floor(seconds / 3600);\n    let m = Math.floor(seconds % 3600 / 60);\n    if (h >= 24) {\n      m = 0;\n    }\n    const formattedDuration = `${h > 0 ? h + \" \" + t(\"text_icon_hour\") : \"\"} ${m > 0 ? m + t(\"text_icon_minute\") : \"\"}`;\n    return formattedDuration;\n  };\n  return result && __jsx(_List, {\n    itemLayout: \"horizontal\",\n    dataSource: [{\n      roads: result.fastest[0].legs[0].steps[2].html_instructions,\n      roadWay: t(\"roadWay_text_1\"),\n      title: selectedUnit === \"MILES\" ? result.fastest && result.fastest[0] ? ` ${(result.fastest[0].legs[0].distance.value / 1000 * Mile_Travel.MILES).toFixed(1)} ${t(\"option_units_miles\")}` : \"N/A\" : result.fastest && result.fastest[0] ? ` ${(result.fastest[0].legs[0].distance.value / 1000).toFixed(1)} km` : \"N/A\",\n      time: result.fastest && result.fastest[0] ? convertToHoursAndMinutes(result.fastest[0].legs[0].duration.value) : \"N/A\",\n      type: \"fastest\"\n    }, {\n      roads: result.shortest[0].legs[0].steps[1].html_instructions,\n      roadWay: t(\"roadWay_text_2\"),\n      title: selectedUnit === \"MILES\" ? result.shortest && result.shortest[0] ? ` ${(result.shortest[0].legs[0].distance.value / 1000 * Mile_Travel.MILES).toFixed(1)} ${t(\"option_units_miles\")}` : \"N/A\" : result.shortest && result.shortest[0] ? ` ${(result.shortest[0].legs[0].distance.value / 1000).toFixed(1)} km` : \"N/A\",\n      time: result.shortest && result.shortest[0] ? convertToHoursAndMinutes(result.shortest[0].legs[0].duration.value) : \"N/A\",\n      type: \"shortest\"\n    }],\n    renderItem: item => __jsx(_List.Item, {\n      id: \"timed-content\",\n      style: {\n        cursor: \"pointer\",\n        borderLeft: item.type === result_select ? \"5px solid #1890ff\" : \"none\",\n        borderBottom: \"1px solid #dadce0\"\n      },\n      onClick: () => {\n        dispatch(selectResultAction(item.type));\n        handleButtonClick(item.type);\n      }\n    }, __jsx(_Row, {\n      id: \"row-col-6-Badge-kilomet\"\n    }, __jsx(_Col, {\n      span: 2,\n      id: \"Col_span_6_kilomet\"\n    }, selectedIcon === \"car\" && __jsx(\"span\", null, __jsx(\"i\", {\n      className: \"fas fa-car icon-vehicle\",\n      id: \"timed-car\"\n    })), selectedIcon === \"motorcycle\" && __jsx(\"span\", null, __jsx(\"i\", {\n      className: \"fas fa-motorcycle icon-vehicle\",\n      id: \"timed-bike\"\n    })), selectedIcon === \"walk\" && __jsx(\"span\", null, __jsx(\"i\", {\n      className: \"fas fa-taxi icon-vehicle\",\n      id: \"timed-taxi\"\n    }))), __jsx(_Col, {\n      span: 15,\n      id: \"Col_span_14_kilomet\"\n    }, __jsx(\"div\", {\n      className: \"s-t-detail\"\n    }, __jsx(\"h1\", null, item.roads), __jsx(\"p\", null, item.roadWay))), __jsx(_Col, {\n      span: 5,\n      id: \"Col_span_4_kilomet\"\n    }, __jsx(\"h4\", null, item.time), __jsx(\"p\", null, item.title)), __jsx(_Col, {\n      span: 4,\n      id: \"col-span-dettext\"\n    }, visibleButton === item.type && __jsx(\"button\", {\n      className: \"dettext\",\n      onClick: openDeltails\n    }, __jsx(\"span\", {\n      id: \"detailtext\"\n    }, t(\"roadWay_text_detailtext\"))))))\n  });\n};\nexport default Navi_calculate;","map":{"version":3,"names":["React","useState","useCallback","Mile_Travel","useTranslation","Navi_calculate","result","selectedUnit","result_select","selectedIcon","openDeltails","dispatch","selectResultAction","visibleButton","setVisibleButton","t","handleButtonClick","type","convertToHoursAndMinutes","seconds","h","Math","floor","m","formattedDuration","__jsx","_List","itemLayout","dataSource","roads","fastest","legs","steps","html_instructions","roadWay","title","distance","value","MILES","toFixed","time","duration","shortest","renderItem","item","Item","id","style","cursor","borderLeft","borderBottom","onClick","_Row","_Col","span","className"],"sources":["D:/Workhome/GitHub/Client-ParkingLot/components/navigation_select/NaviCalculate .jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { List, Row, Col } from 'antd';\r\nimport { Mile_Travel } from \"../../consts\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Navi_calculate = ({\r\n  result,\r\n  selectedUnit,\r\n  result_select,\r\n  // handleButtonClick,\r\n  selectedIcon,\r\n  openDeltails,\r\n  dispatch,\r\n  selectResultAction,\r\n}) => {\r\n  const [visibleButton, setVisibleButton] = useState(\"fastest\");\r\n  const { t } = useTranslation(\"common\"); \r\n\r\n  const handleButtonClick = useCallback((type) => {\r\n    setVisibleButton(type);\r\n  }, []);\r\n\r\n  const convertToHoursAndMinutes = (seconds) => {\r\n    let h = Math.floor(seconds / 3600);\r\n    let m = Math.floor((seconds % 3600) / 60);\r\n    if (h >= 24) {\r\n      m = 0;\r\n    }\r\n    const formattedDuration = `${h > 0 ? h + \" \" + t(\"text_icon_hour\") : \"\"} ${m > 0 ? m + t(\"text_icon_minute\") : \"\"}`;\r\n    return formattedDuration;\r\n  };\r\n\r\n  return (\r\n    result && (\r\n      <List\r\n        itemLayout=\"horizontal\"\r\n        dataSource={[\r\n          {\r\n            roads: result.fastest[0].legs[0].steps[2].html_instructions,\r\n            roadWay: t(\"roadWay_text_1\"),\r\n            title:\r\n              selectedUnit === \"MILES\"\r\n                ? result.fastest && result.fastest[0]\r\n                  ? ` ${(\r\n                    (result.fastest[0].legs[0].distance.value / 1000) *\r\n                    Mile_Travel.MILES\r\n                  ).toFixed(1)} ${t(\"option_units_miles\")}`\r\n                  : \"N/A\"\r\n                : result.fastest && result.fastest[0]\r\n                  ? ` ${(\r\n                    result.fastest[0].legs[0].distance.value / 1000\r\n                  ).toFixed(1)} km`\r\n                  : \"N/A\",\r\n            time:\r\n              result.fastest && result.fastest[0]\r\n                ? convertToHoursAndMinutes(result.fastest[0].legs[0].duration.value)\r\n                : \"N/A\",\r\n            type: \"fastest\",\r\n          },\r\n          {\r\n            roads: result.shortest[0].legs[0].steps[1].html_instructions,\r\n            roadWay: t(\"roadWay_text_2\"),\r\n            title:\r\n              selectedUnit === \"MILES\"\r\n                ? result.shortest && result.shortest[0]\r\n                  ? ` ${(\r\n                    (result.shortest[0].legs[0].distance.value / 1000) *\r\n                    Mile_Travel.MILES\r\n                  ).toFixed(1)} ${t(\"option_units_miles\")}`\r\n                  : \"N/A\"\r\n                : result.shortest && result.shortest[0]\r\n                  ? ` ${(\r\n                    result.shortest[0].legs[0].distance.value / 1000\r\n                  ).toFixed(1)} km`\r\n                  : \"N/A\",\r\n            time:\r\n              result.shortest && result.shortest[0]\r\n                ? convertToHoursAndMinutes(result.shortest[0].legs[0].duration.value)\r\n                : \"N/A\",\r\n            type: \"shortest\",\r\n          },\r\n        ]}\r\n        renderItem={(item) => (\r\n          <List.Item\r\n            id=\"timed-content\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              borderLeft:\r\n                item.type === result_select ? \"5px solid #1890ff\" : \"none\",\r\n              borderBottom: \"1px solid #dadce0\",\r\n            }}\r\n            onClick={() => {\r\n              dispatch(selectResultAction(item.type));\r\n              handleButtonClick(item.type);\r\n            }}\r\n          >\r\n            <Row id=\"row-col-6-Badge-kilomet\">\r\n              <Col span={2} id=\"Col_span_6_kilomet\">\r\n                {selectedIcon === \"car\" && (\r\n                  <span>\r\n                    <i className=\"fas fa-car icon-vehicle\" id=\"timed-car\"></i>\r\n                  </span>\r\n                )}\r\n                {selectedIcon === \"motorcycle\" && (\r\n                  <span>\r\n                    <i className=\"fas fa-motorcycle icon-vehicle\" id=\"timed-bike\"></i>\r\n                  </span>\r\n                )}\r\n                {selectedIcon === \"walk\" && (\r\n                  <span>\r\n                    <i className=\"fas fa-taxi icon-vehicle\" id=\"timed-taxi\"></i>\r\n                  </span>\r\n                )}\r\n              </Col>\r\n              <Col span={15} id=\"Col_span_14_kilomet\">\r\n                <div className=\"s-t-detail\">\r\n                  <h1>{item.roads}</h1>\r\n                  <p>{item.roadWay}</p>\r\n                </div>\r\n              </Col>\r\n              <Col span={5} id=\"Col_span_4_kilomet\">\r\n                <h4>{item.time}</h4>\r\n                <p>{item.title}</p>\r\n              </Col>\r\n              <Col span={4} id=\"col-span-dettext\">\r\n                {visibleButton === item.type && (\r\n                  <button className=\"dettext\" onClick={openDeltails}>\r\n                    <span id=\"detailtext\">{t(\"roadWay_text_detailtext\")}</span>\r\n                  </button>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nexport default Navi_calculate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}