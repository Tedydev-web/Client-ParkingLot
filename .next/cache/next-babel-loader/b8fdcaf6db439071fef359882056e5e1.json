{"ast":null,"code":"import { GET } from \"./base_request\";\nimport { API_URL } from \"../consts/api_url\";\nimport Axios from \"axios\";\nexport default {\n  geocode: function geocode(location, options) {\n    return GET(API_URL.GEOCODE, {\n      latlng: \"\".concat(location.latitude, \",\").concat(location.longitude)\n    }, options);\n  },\n  autocomplete: function autocomplete(input, location, limit, radius, has_children, options) {\n    return GET(API_URL.AUTOCOMPLETE, {\n      input: input,\n      location: location,\n      radius: radius || 3000,\n      limit: limit || 10,\n      has_children: has_children || false\n    }, options);\n  },\n  direction: function direction(params, options) {\n    return GET(API_URL.DIRECTION, {\n      origin: \"\".concat(params.origin.latitude, \",\").concat(params.origin.longitude),\n      destination: \"\".concat(params.destination.latitude, \",\").concat(params.destination.longitude),\n      vehicle: params.vehicle || 'car'\n    }, options);\n  },\n  distancematrix: function distancematrix(params, options) {\n    return GET(API_URL.DISTANCEMATRIX, {\n      origins: \"\".concat(params.origin.latitude, \",\").concat(params.origin.longitude),\n      destinations: \"\".concat(params.destination.latitude, \",\").concat(params.destination.longitude),\n      vehicle: \"\".concat(params.vehicle)\n    }, options);\n  },\n  place_detail: function place_detail(placeid, options) {\n    return GET(API_URL.PLACE_DETAIL, {\n      placeid: placeid\n    }, options);\n  },\n  get_weather: function get_weather(latitude, longitude) {\n    return Axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&units=metric&lang=vi&appid=\").concat(\"b80572c03d85f1f8899c2073275803d9\"));\n  }\n};","map":{"version":3,"names":["GET","API_URL","Axios","geocode","location","options","GEOCODE","latlng","concat","latitude","longitude","autocomplete","input","limit","radius","has_children","AUTOCOMPLETE","direction","params","DIRECTION","origin","destination","vehicle","distancematrix","DISTANCEMATRIX","origins","destinations","place_detail","placeid","PLACE_DETAIL","get_weather","get"],"sources":["D:/parkingLot/Client-ParkingLot/utils/request.js"],"sourcesContent":["import { GET } from \"./base_request\";\r\nimport { API_URL } from \"../consts/api_url\";\r\nimport Axios from \"axios\";\r\nexport default {\r\n  geocode: (location, options) => {\r\n    return GET(API_URL.GEOCODE, {\r\n      latlng: `${location.latitude},${location.longitude}`\r\n    }, options);\r\n  },\r\n  autocomplete: (input, location, limit, radius, has_children, options) => {\r\n    return GET(API_URL.AUTOCOMPLETE, {\r\n      input,\r\n      location,\r\n      radius: radius || 3000,\r\n      limit: limit || 10,\r\n      has_children: has_children || false\r\n    }, options);\r\n  },\r\n  direction: (params, options) => {\r\n    return GET(API_URL.DIRECTION, {\r\n      origin: `${params.origin.latitude},${params.origin.longitude}`,\r\n      destination: `${params.destination.latitude},${params.destination.longitude}`,\r\n      vehicle: params.vehicle || 'car'\r\n    }, options);\r\n  },\r\n  distancematrix: (params, options) => {\r\n    return GET(API_URL.DISTANCEMATRIX, {\r\n      origins: `${params.origin.latitude},${params.origin.longitude}`,\r\n      destinations: `${params.destination.latitude},${params.destination.longitude}`,\r\n      vehicle: `${params.vehicle}`\r\n    }, options);\r\n  },\r\n  place_detail: (placeid, options) => {\r\n    return GET(API_URL.PLACE_DETAIL, {\r\n      placeid\r\n    }, options);\r\n  },\r\n  get_weather: (latitude, longitude) => {\r\n    return Axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&lang=vi&appid=${WEATHER_API}`)\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG;AACZ,SAASC,OAAO;AAChB,OAAOC,KAAK,MAAM,OAAO;AACzB,eAAe;EACbC,OAAO,EAAE,SAAAA,QAACC,QAAQ,EAAEC,OAAO,EAAK;IAC9B,OAAOL,GAAG,CAACC,OAAO,CAACK,OAAO,EAAE;MAC1BC,MAAM,KAAAC,MAAA,CAAKJ,QAAQ,CAACK,QAAQ,OAAAD,MAAA,CAAIJ,QAAQ,CAACM,SAAS;IACpD,CAAC,EAAEL,OAAO,CAAC;EACb,CAAC;EACDM,YAAY,EAAE,SAAAA,aAACC,KAAK,EAAER,QAAQ,EAAES,KAAK,EAAEC,MAAM,EAAEC,YAAY,EAAEV,OAAO,EAAK;IACvE,OAAOL,GAAG,CAACC,OAAO,CAACe,YAAY,EAAE;MAC/BJ,KAAK,EAALA,KAAK;MACLR,QAAQ,EAARA,QAAQ;MACRU,MAAM,EAAEA,MAAM,IAAI,IAAI;MACtBD,KAAK,EAAEA,KAAK,IAAI,EAAE;MAClBE,YAAY,EAAEA,YAAY,IAAI;IAChC,CAAC,EAAEV,OAAO,CAAC;EACb,CAAC;EACDY,SAAS,EAAE,SAAAA,UAACC,MAAM,EAAEb,OAAO,EAAK;IAC9B,OAAOL,GAAG,CAACC,OAAO,CAACkB,SAAS,EAAE;MAC5BC,MAAM,KAAAZ,MAAA,CAAKU,MAAM,CAACE,MAAM,CAACX,QAAQ,OAAAD,MAAA,CAAIU,MAAM,CAACE,MAAM,CAACV,SAAS,CAAE;MAC9DW,WAAW,KAAAb,MAAA,CAAKU,MAAM,CAACG,WAAW,CAACZ,QAAQ,OAAAD,MAAA,CAAIU,MAAM,CAACG,WAAW,CAACX,SAAS,CAAE;MAC7EY,OAAO,EAAEJ,MAAM,CAACI,OAAO,IAAI;IAC7B,CAAC,EAAEjB,OAAO,CAAC;EACb,CAAC;EACDkB,cAAc,EAAE,SAAAA,eAACL,MAAM,EAAEb,OAAO,EAAK;IACnC,OAAOL,GAAG,CAACC,OAAO,CAACuB,cAAc,EAAE;MACjCC,OAAO,KAAAjB,MAAA,CAAKU,MAAM,CAACE,MAAM,CAACX,QAAQ,OAAAD,MAAA,CAAIU,MAAM,CAACE,MAAM,CAACV,SAAS,CAAE;MAC/DgB,YAAY,KAAAlB,MAAA,CAAKU,MAAM,CAACG,WAAW,CAACZ,QAAQ,OAAAD,MAAA,CAAIU,MAAM,CAACG,WAAW,CAACX,SAAS,CAAE;MAC9EY,OAAO,KAAAd,MAAA,CAAKU,MAAM,CAACI,OAAO;IAC5B,CAAC,EAAEjB,OAAO,CAAC;EACb,CAAC;EACDsB,YAAY,EAAE,SAAAA,aAACC,OAAO,EAAEvB,OAAO,EAAK;IAClC,OAAOL,GAAG,CAACC,OAAO,CAAC4B,YAAY,EAAE;MAC/BD,OAAO,EAAPA;IACF,CAAC,EAAEvB,OAAO,CAAC;EACb,CAAC;EACDyB,WAAW,EAAE,SAAAA,YAACrB,QAAQ,EAAEC,SAAS,EAAK;IACpC,OAAOR,KAAK,CAAC6B,GAAG,wDAAAvB,MAAA,CAAwDC,QAAQ,WAAAD,MAAA,CAAQE,SAAS,kCAAAF,MAAA,oCAA4C,CAAC;EAChJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}